node 
{
	properties([buildDiscarder(logRotator(artifactDaysToKeepStr: '5', artifactNumToKeepStr: '5', daysToKeepStr: '5', numToKeepStr: '5')), pipelineTriggers([pollSCM('* * * * *')])])
	def mavenHome=tool name: "maven-3.9.9"
    try 
	{  
		//this is first stage 
		notifyBuild('STARTED')
		stage('git checkout')
		{
			git branch: 'developement', credentialsId: '0d21a676-92f7-4609-8ce5-d1fa5387d808', url: 'https://github.com/AnilBabu1011/maven-web-app-project-kk-funda.git'
		}
		stage('Build')
		{
			sh "${mavenHome}/bin/mvn clean package"
		}
		stage('SQ Report')
		{  
			sh "${mavenHome}/bin/mvn clean sonar:sonar"   
		}
		stage('upload artifactt')
		{
			sh "${mavenHome}/bin/mvn clean deploy"
		}
		stage('DeployIntoTomcat')
		{
			sshagent(['f2e24f63-6283-44ed-8468-1fa73cb031d1']) 
			{	
				sh "scp -o StrictHostKeyChecking=no target/maven-web-application.war ec2-user@13.201.194.103:/opt/apache-tomcat-9.0.97/webapps/"    
			}	
		}
	
	}   
	catch (e) 
	{
		// If there was an exception thrown, the build failed
		currentBuild.result = "FAILED"
	} 
	finally 
	{
		// Success or failure, always send notifications
		notifyBuild(currentBuild.result)
	}
}//node ending


def notifyBuild(String buildStatus = 'STARTED') 
{
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESS'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') 
  {
    color = 'YELLOW'
    colorCode = '#FFFF00'
  } 
  else if (buildStatus == 'SUCCESS') 
  {
    color = 'GREEN'
    colorCode = '#00FF00'
  } 
  else 
  {
    color = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary, channel: $jio-project)
}
